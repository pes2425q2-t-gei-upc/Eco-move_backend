@staff_member_required
def editar_usuario(request, usuario_id):
    usuario = get_object_or_404(Usuario, id=usuario_id)
     
    if request.method == 'POST':
        # Obtener datos del formulario
        username = request.POST.get('username')
        email = request.POST.get('email')
        first_name = request.POST.get('first_name')
        last_name = request.POST.get('last_name')
        telefon = request.POST.get('telefon')
        idioma = request.POST.get('idioma')
        descripcio = request.POST.get('descripcio')
        is_admin = request.POST.get('is_admin') == 'on'
        is_active = request.POST.get('is_active') == 'on'
        new_password = request.POST.get('new_password')
         
        # Verificar si el username ya existe (excluyendo el usuario actual)
        if Usuario.objects.filter(username=username).exclude(id=usuario_id).exists():
             messages.error(request, f'El nombre de usuario {username} ya está en uso.')
             return redirect('admin_connect/editar_usuario', usuario_id=usuario_id)
         
        # Verificar si el email ya existe (excluyendo el usuario actual)
        if Usuario.objects.filter(email=email).exclude(id=usuario_id).exists():
             messages.error(request, f'El email {email} ya está en uso.')
             return redirect('admin_connect/editar_usuario', usuario_id=usuario_id)
         
         # Actualizar datos del usuario
        usuario.username = username
        usuario.email = email
        usuario.first_name = first_name
        usuario.last_name = last_name
        usuario.telefon = telefon
        usuario.idioma = idioma
        usuario.descripcio = descripcio
        usuario.is_admin = is_admin
        usuario.is_staff = is_admin  # Actualizar is_staff junto con is_admin
        usuario.is_active = is_active
         
         # Actualizar contraseña si se proporciona una nueva
        if new_password:
            usuario.set_password(new_password)
         
        messages.success(request, f'Usuario {username} actualizado correctamente.')
        return redirect(GESTIONAR_USUARIOS_URL)
     
    context = {
         'usuario': usuario,
    }
     
    return render(request, EDITAR_USUARIO_TEMPLATE, context)