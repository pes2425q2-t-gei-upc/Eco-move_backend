# Generated by Django 5.1.7 on 2025-05-17 17:30

import cloudinary_storage.storage
import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Punt',
            fields=[
                ('id_punt', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('lat', models.FloatField()),
                ('lng', models.FloatField()),
                ('direccio', models.CharField(blank=True, max_length=255)),
                ('ciutat', models.CharField(blank=True, max_length=100)),
                ('provincia', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TextItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=255, unique=True)),
                ('text', models.TextField(blank=True)),
                ('text_en', models.TextField(blank=True, null=True)),
                ('text_es', models.TextField(blank=True, null=True)),
                ('text_ca', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TipusCarregador',
            fields=[
                ('id_carregador', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('nom_tipus', models.CharField(max_length=100)),
                ('tipus_connector', models.CharField(max_length=100)),
                ('tipus_corrent', models.CharField(choices=[('Corrent alterna', 'Ac'), ('Corrent continua', 'Dc')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='TipusVelocitat',
            fields=[
                ('id_velocitat', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('nom_velocitat', models.CharField(choices=[('Càrrega lenta', 'Lenta'), ('Càrrega semi-ràpida', 'Semi Rapida'), ('Càrrega ràpida', 'Rapida'), ('Càrrega ultra-ràpida', 'Ultra Rapida')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('idioma', models.CharField(choices=[('Catala', 'Catala'), ('Castellano', 'Castellano'), ('English', 'English')], default='Catala', max_length=20)),
                ('telefon', models.CharField(blank=True, max_length=15, null=True)),
                ('foto', models.ImageField(blank=True, null=True, storage=cloudinary_storage.storage.MediaCloudinaryStorage(), upload_to='fotos/')),
                ('descripcio', models.TextField(blank=True, null=True)),
                ('_punts', models.IntegerField(db_column='punts', default=0)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DataDescompte',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_obtencio', models.DateField()),
                ('usuari', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='descomptes_obtinguts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Descomptes',
            fields=[
                ('id_descompte', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=100)),
                ('descripcio', models.TextField()),
                ('punts_necessaris', models.IntegerField()),
                ('usuaris', models.ManyToManyField(related_name='descomptes', through='api_punts_carrega.DataDescompte', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='datadescompte',
            name='descompte',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usuaris_obtenidors', to='api_punts_carrega.descomptes'),
        ),
        migrations.CreateModel(
            name='EstacioCarrega',
            fields=[
                ('punt_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api_punts_carrega.punt')),
                ('gestio', models.CharField(max_length=100)),
                ('tipus_acces', models.CharField(max_length=100)),
                ('nplaces', models.CharField(max_length=20)),
                ('potencia', models.IntegerField(null=True)),
                ('fuera_de_servicio', models.BooleanField(default=False, help_text='Indica si la estación está fuera de servicio')),
                ('motivo_fuera_servicio', models.CharField(blank=True, help_text='Motivo por el que la estación está fuera de servicio', max_length=255)),
                ('tipus_carregador', models.ManyToManyField(related_name='estacions_de_carrega', to='api_punts_carrega.tipuscarregador')),
                ('tipus_velocitat', models.ManyToManyField(related_name='estacions_de_carrega', to='api_punts_carrega.tipusvelocitat')),
            ],
            bases=('api_punts_carrega.punt',),
        ),
        migrations.CreateModel(
            name='RefugioClimatico',
            fields=[
                ('punt_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api_punts_carrega.punt')),
                ('nombre', models.CharField(max_length=255)),
                ('numero_calle', models.CharField(blank=True, max_length=20)),
            ],
            bases=('api_punts_carrega.punt',),
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id_report', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('missatge', models.TextField()),
                ('data', models.DateTimeField(auto_now_add=True)),
                ('administrador_assignat', models.ForeignKey(blank=True, limit_choices_to={'is_admin': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reports_assignats', to=settings.AUTH_USER_MODEL)),
                ('reportador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports_emesos', to=settings.AUTH_USER_MODEL)),
                ('reportat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports_rebuts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Reserva',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField()),
                ('hora', models.TimeField()),
                ('duracion', models.DurationField(help_text='Reserva mínima 15 min, Reserva máxima 24 h', validators=[django.core.validators.MinValueValidator(datetime.timedelta(seconds=900)), django.core.validators.MaxValueValidator(datetime.timedelta(days=1))])),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservas', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReservaFinalitzada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('punts_obtinguts', models.IntegerField(default=0)),
                ('preu', models.DecimalField(decimal_places=2, max_digits=6)),
                ('reserva', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='finalitzada', to='api_punts_carrega.reserva')),
            ],
        ),
        migrations.CreateModel(
            name='RespostaReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resolucio', models.CharField(choices=[('Usuari bloquejat', 'Usuari Bloquejat'), ('Missatge eliminat', 'Missatge Eliminat'), ('Absolt', 'Absolt')], max_length=50)),
                ('missatge', models.TextField()),
                ('data_resolucio', models.DateTimeField(auto_now_add=True)),
                ('report', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='resposta', to='api_punts_carrega.report')),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('matricula', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('carrega_actual', models.FloatField()),
                ('capacitat_bateria', models.FloatField()),
                ('model', models.CharField(max_length=100)),
                ('marca', models.CharField(max_length=100)),
                ('any_model', models.IntegerField()),
                ('propietari', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to=settings.AUTH_USER_MODEL)),
                ('tipus_carregador', models.ManyToManyField(related_name='tipus_carregador', to='api_punts_carrega.tipuscarregador')),
            ],
        ),
        migrations.AddField(
            model_name='reserva',
            name='vehicle',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reservas', to='api_punts_carrega.vehicle'),
        ),
        migrations.AlterUniqueTogether(
            name='datadescompte',
            unique_together={('usuari', 'descompte')},
        ),
        migrations.AddField(
            model_name='reserva',
            name='estacion',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservas', to='api_punts_carrega.estaciocarrega'),
        ),
        migrations.CreateModel(
            name='ReporteEstacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_error', models.CharField(choices=[('NO_FUNCIONA', 'No funciona / Sin energía'), ('CARGA_LENTA', 'Carga inesperadamente lenta'), ('CONECTOR_DANADO', 'Conector dañado o bloqueado'), ('PANTALLA_APAGADA', 'Pantalla apagada o ilegible'), ('PAGO_FALLIDO', 'Problema con el sistema de pago'), ('OBSTACULO_FISICO', 'Obstáculo físico / Plaza bloqueada'), ('OTRO', 'Otro problema (ver comentario)')], max_length=50, verbose_name='Tipo de Error')),
                ('comentario_usuario', models.TextField(blank=True, verbose_name='Comentario del Usuario')),
                ('estado', models.CharField(choices=[('ABIERTO', 'Abierto'), ('EN_PROGRESO', 'En Progreso'), ('RESUELTO', 'Resuelto'), ('CERRADO_SIN_SOLUCION', 'Cerrado (Sin Solución)'), ('DUPLICADO', 'Duplicado')], default='ABIERTO', max_length=30, verbose_name='Estado del Reporte')),
                ('fecha_reporte', models.DateTimeField(auto_now_add=True, verbose_name='Fecha del Reporte')),
                ('fecha_ultima_modificacion', models.DateTimeField(auto_now=True, verbose_name='Última Modificación')),
                ('usuario_reporta', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reportes_estacion_realizados', to=settings.AUTH_USER_MODEL, verbose_name='Usuario que Reporta')),
                ('estacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reportes_errores', to='api_punts_carrega.estaciocarrega', verbose_name='Estación Reportada')),
            ],
            options={
                'verbose_name': 'Reporte de Estación',
                'verbose_name_plural': 'Reportes de Estaciones',
                'ordering': ['-fecha_reporte'],
            },
        ),
        migrations.CreateModel(
            name='ValoracionEstacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('puntuacion', models.IntegerField(help_text='Valoración entre 1 y 5', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comentario', models.TextField(blank=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='valoraciones_estaciones', to=settings.AUTH_USER_MODEL)),
                ('estacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='valoraciones', to='api_punts_carrega.estaciocarrega')),
            ],
            options={
                'ordering': ['-fecha_creacion'],
                'unique_together': {('estacion', 'usuario')},
            },
        ),
    ]
